The schedule needs to include a time range of 60 because that is the LCM of all the periods.

Snapshot of slack at time = 0
Task	Slack
A	20 - 6 = 14
B	10 - 1 = 9
C	15 - 4 = 11
D	30 - 1 = 29
E	10 - 3 = 7

Run task E first.

At time = 2, slack of E and B are equal (slack = 7). Keep running E to save a context switch.

Task E completes at time = 3.

Snapshot of slack at time = 3
Task	Slack
A	(20 - 3) - 6 = 11
B	(10 - 3) - 1 = 6
C	(15 - 3) - 4 = 8
D	(30 - 3) - 1 = 26

Start task B next.
Task B completes at time = 4.

Snapshot of slack at time = 4
Task	Slack
A	(20 - 4) - 6 = 10
C	(15 - 4) - 4 = 7
D	(30 - 4) - 1 = 25

Start task C next.

At time = 7, slack of C and A are equal (slack = 7). Keep running C to save a context switch.

Task C completes at time = 8.

Snapshot of slack at time = 8
Task	Slack
A	(20 - 8) - 6 = 6
D	(30 - 8) - 1 = 21

Start task A next.

At time = 10, new instances of B and E arrive with deadlines both = 20.

Snapshot of slack at time = 10
Task	Slack
A	(20 - 10) - (6 - 2) = 6
B	(20 - 10) - 1 = 9
D	(30 - 10) - 1 = 21
E	(20 - 10) - 3 = 7

At time = 11, slack of A and E are equal (slack = 6). Keep running A to save a context switch.

Snapshot of slack at time = 11
Task	Slack
A	(20 - 11) - (6 - 3) = 6
B	(20 - 11) - 1 = 8
D	(30 - 11) - 1 = 18
E	(20 - 11) - 3 = 6

At time = 12, slack of E (= 5) is less than slack of A (= 6). Switch to task E even though task A is not finished yet.

Snapshot of slack at time = 12
Task	Slack
A	(20 - 12) - (6 - 4) = 6
B	(20 - 12) - 1 = 7
D	(30 - 12) - 1 = 17
E	(20 - 12) - 3 = 5

At time = 13, slack of E and A are equal (slack = 5). Keep running E to save a context switch.

Snapshot of slack at time = 13
Task	Slack
A	(20 - 13) - (6 - 4) = 5
B	(20 - 13) - 1 = 6
D	(30 - 13) - 1 = 16
E	(20 - 13) - (3 - 1) = 5

At time = 14, slack of A (= 4) is less than slack of E (= 5). Switch to task A even though task E is not finished yet.

Snapshot of slack at time = 14
Task	Slack
A	(20 - 14) - (6 - 4) = 4
B	(20 - 14) - 1 = 5
D	(30 - 14) - 1 = 15
E	(20 - 14) - (3 - 2) = 5

At time = 15, slack of A, B, and E are equal (slack = 4). Keep running A to save a context switch.
A new instance of task C arrives with deadline = 30.

Task A completes at time = 16.

Snapshot of slack at time = 16
Task	Slack
B	(20 - 16) - 1 = 3
C	(30 - 16) - 4 = 10
D	(30 - 16) - 1 = 15
E	(20 - 16) - (3 - 2) = 3

At time = 16, slack of B and E are still equal (slack = 3). Arbitrarily choose one to resume first.
* Since task E had been running more recently than task B, resume task E.

Task E completes at time = 17.

Run task B next.

Task B completes at time = 18.

Snapshot of slack at time = 18
Task	Slack
C	(30 - 18) - 4 = 8
D	(30 - 18) - 1 = 11

Run task C next.

At time = 20, new instances of task A, B, and E arrive.

Snapshot of slack at time = 20
Task	Slack
A	(40 - 20) - 6 = 14
B	(30 - 20) - 1 = 9
C	(30 - 20) - (4 - 2) = 8
D	(30 - 20) - 1 = 9
E	(30 - 20) - 3 = 7

The slack of E (= 7) is now the least slack, so E has to preempt the running task (C).

Snapshot of slack at time = 22
Task	Slack
A	(40 - 22) - 6 = 12
B	(30 - 22) - 1 = 7
C	(30 - 22) - (4 - 2) = 6
D	(30 - 22) - 1 = 7
E	(30 - 22) - (3 - 2) = 7

Task C is now the least slack (= 6), so C has to preempt the running task (E).

Task C completes at time = 24.

Snapshot of slack at time = 24
Task	Slack
A	(40 - 24) - 6 = 10
B	(30 - 24) - 1 = 5
D	(30 - 24) - 1 = 5
E	(30 - 24) - (3 - 2) = 5

Run any of B, D, or E next arbitrarily. Since E was preempted most recently, resume it.

Task E completes at time = 25.

Snapshot of slack at time = 25
Task	Slack
A	(40 - 25) - 6 = 9
B	(30 - 25) - 1 = 4
D	(30 - 25) - 1 = 4

Run any of B or D next arbitrarily. Choose B.

Task B completes at time = 26.

Snapshot of slack at time = 26
Task	Slack
A	(40 - 26) - 6 = 8
D	(30 - 26) - 1 = 3

Run task D next.

Task D completes at time = 27.

Task A is the only one ready, so run it.

At time = 30, new instances of B, C, D, and E arrive.

Snapshot of slack at time = 20
Task	Slack
A	(40 - 30) - (6 - 3) = 7
B	(40 - 30) - 1 = 9
C	(45 - 30) - 4 = 11
D	(60 - 30) - 1 = 29
E	(40 - 30) - 3 = 7

Keep running task A to save a context switch.

Snapshot of slack at time = 31
Task	Slack
A	(40 - 31) - (6 - 4) = 7
B	(40 - 31) - 1 = 8
C	(45 - 31) - 4 = 10
D	(60 - 31) - 1 = 28
E	(40 - 31) - 3 = 6

Preempt task A and switch to E.

Time = 33
Task	Slack
A	(40 - 33) - (6 - 4) = 5
B	(40 - 33) - 1 = 6
C	(45 - 33) - 4 = 8
D	(60 - 33) - 1 = 26
E	(40 - 33) - (3 - 2) = 6

Preempt task E and switch to A.

Task A completes at time = 35.

Time = 35
Task	Slack
B	(40 - 35) - 1 = 4
C	(45 - 35) - 4 = 6
D	(60 - 35) - 1 = 24
E	(40 - 35) - (3 - 2) = 4

Resume task E because it was preempted most recently.

Task E completes at time = 36.

Time = 36
Task	Slack
B	(40 - 36) - 1 = 3
C	(45 - 36) - 4 = 5
D	(60 - 36) - 1 = 23

Run task B.

Task B completes at time = 37.

Time = 37
Task	Slack
C	(45 - 37) - 4 = 4
D	(60 - 37) - 1 = 22

Run task C.

New instances of A, B, and E arrive at time = 40.

Time = 40
Task	Slack
A	(60 - 40) - 6 = 14
B	(50 - 40) - 1 = 9
C	(45 - 40) - (4 - 3) = 4
D	(60 - 40) - 1 = 19
E	(50 - 40) - 3 = 7

Keep running task C.

Task C completes at time = 41.

Time = 41
Task	Slack
A	(60 - 41) - 6 = 13
B	(50 - 41) - 1 = 8
D	(60 - 41) - 1 = 18
E	(50 - 41) - 3 = 6

Run task E.

Task E completes at time = 44.

Time = 44
Task	Slack
A	(60 - 44) - 6 = 10
B	(50 - 44) - 1 = 5
D	(60 - 44) - 1 = 15

Run task B.

Task B completes at time = 45.
A new instance of task C arrives at time = 45.

Time = 45
Task	Slack
A	(60 - 45) - 6 = 9
C	(60 - 45) - 4 = 11
D	(60 - 45) - 1 = 14

Run task A.

Time = 48
Task	Slack
A	(60 - 48) - (6 - 3) = 9
C	(60 - 48) - 4 = 8
D	(60 - 48) - 1 = 11

Preempt task A and switch to C.

New instances of B and E arrive at time = 50.

Time = 50
Task	Slack
A	(60 - 50) - (6 - 3) = 7
B	(60 - 50) - 1 = 9
C	(60 - 50) - (4 - 2) = 8
D	(60 - 50) - 1 = 9
E	(60 - 50) - 3 = 7

Preempt C and choose one of A or E to run arbitrarily. Choose A since it was preempted most recently.

Time = 51
Task	Slack
A	(60 - 51) - (6 - 4) = 7
B	(60 - 51) - 1 = 8
C	(60 - 51) - (4 - 2) = 7
D	(60 - 51) - 1 = 8
E	(60 - 51) - 3 = 6

Preempt A and switch to E.

Time = 53
Task	Slack
A	(60 - 53) - (6 - 4) = 5
B	(60 - 53) - 1 = 6
C	(60 - 53) - (4 - 2) = 5
D	(60 - 53) - 1 = 6
E	(60 - 53) - (3 - 2) = 6

Preempt E and arbitrarily choose one of A or C to run. Choose A since it was preempted most recently.

Time = 54
Task	Slack
A	(60 - 54) - (6 - 5) = 5
B	(60 - 54) - 1 = 5
C	(60 - 54) - (4 - 2) = 4
D	(60 - 54) - 1 = 5
E	(60 - 54) - (3 - 2) = 5

Preempt A and switch to C.

Time = 55
Task	Slack
A	(60 - 55) - (6 - 5) = 4
B	(60 - 55) - 1 = 4
C	(60 - 55) - (4 - 3) = 4
D	(60 - 55) - 1 = 4
E	(60 - 55) - (3 - 2) = 4

Keep running C to save a context switch.

Task C completes at time = 56.

Time = 56
Task	Slack
A	(60 - 56) - (6 - 5) = 3
B	(60 - 56) - 1 = 3
D	(60 - 56) - 1 = 3
E	(60 - 56) - (3 - 2) = 3

Run the last cycle of the remaining tasks in arbitrary order.

Say: A, E, B, D

The complete pattern of execution from time = 0 to 60 repeats after time = 60, since 60 is the LCM of all the periods.



